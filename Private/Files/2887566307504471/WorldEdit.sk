#   . WorldEdit (Skript), Developped by alexisl315 (Alias: Lennord).
#   . This skript allows you to redo all or almost all the functionality of the WorldEdit and FastAsyncWorldEdit plugin.

#   --> Code:

on join:
	yaml file "plugins/WorldEdit/players/%player%/who.yml" doesn't exist:
		load "plugins/WorldEdit/players/%player%/who.yml"
		set yaml value "wand.stats" from "who" to false
		set yaml value "undo.stats" from "who" to false
		set yaml value "undo.numbers" from "who" to 0
		set yaml value "redo.stats" from "who" to false
		set yaml value "redo.numbers" from "who" to 0
		save yaml "who"
		unload yaml "who"
		stop

on load:
	yaml file "plugins/WorldEdit/config.yml" doesn't exist:
		load "plugins/WorldEdit/config.yml"
		set yaml value "language" from "config" to "English"
		set yaml value "wand.stats" from "config" to true
		set yaml value "wand.item-type" from "config" to wooden axe
		save yaml "config"
		unload yaml "config"
		stop
	else:
		load "plugins/WorldEdit/config.yml"
		yaml value "language" from "config" != "English":
			set yaml value "language" from "config" to "English"
		save yaml "config"
		unload yaml "config"
		stop

on damage:
	attacker = player:
		load "plugins/WorldEdit/config.yml"
		attacker's tool = yaml value "wand.item-type" from "config" named "&c&l↪ &7Wand of WorldEdit":
			cancel event

on load:
	send "&7[&bWorldEdit&7] &8x &2Enabled" to console

on unload:
	send "&7[&bWorldEdit&7] &8x &cDisabled" to console

function WorldEditNoPermission(s: sender):
	load "plugins/WorldEdit/config.yml"
	yaml value "language" from "config" = "English":
		send "&4| &8x &cYou have not permission to use this command." to {_s}

function WorldEditNoCommandConsole(s: sender):
	load "plugins/WorldEdit/config.yml"
	yaml value "language" from "config" = "English":
		send "&4| &8x &cYou must be a player to use this command." to {_s}

function WorldEditHelp(s: sender, typehelp: text):
	load "plugins/WorldEdit/config.yml"
	yaml value "language" from "config" = "English":
		{_typehelp} = "WorldEditCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/worldedit &binfo &8x &7Seen informations of this skript." to {_s}
			send "&8| &f/worldedit &breload &8x &7Reload this skript." to {_s}
			send "" to {_s}
		{_typehelp} = "UpCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//up &7[&cnumber&7] &8x &7Teleport at location up." to {_s}
			send "" to {_s}
		{_typehelp} = "PosCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//pos &7[&c1 &for &c2&7] &8x &7Set position at your location." to {_s}
			send "" to {_s}
		{_typehelp} = "HposCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//hpos &7[&c1 &for &c2&7] &8x &7Set position at your targeted's block." to {_s}
			send "" to {_s}
		{_typehelp} = "SetCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//set &7[&citem type&7] &8x &7Set block type." to {_s}
			send "" to {_s}
		{_typehelp} = "SetbiomeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//setbiome &7[&cbiome type&7] &8x &7Set biome type." to {_s}
			send "" to {_s}
		{_typehelp} = "CountCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//count &7[&citem type&7] &8x &7Count of the block type." to {_s}
			send "" to {_s}
		{_typehelp} = "ThawCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//thaw &7[&cradius&7] &8x &7Delete all snows blocks." to {_s}
			send "" to {_s}
		{_typehelp} = "TreeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//tree &7[&cname of tree&7] &8x &7Spawn the tree type." to {_s}
			send "" to {_s}
		{_typehelp} = "ReplaceCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//replace &7[&cname of block replace&7] &7[&cname of block&7] &8x &7Replace block type to block type." to {_s}
			send "" to {_s}
		{_typehelp} = "SphereCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//sphere &7[&cradius&7] &7[&cname of block&7] &8x &7Spawn sphere at your location." to {_s}
			send "" to {_s}
		{_typehelp} = "HsphereCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//hsphere &7[&cradius&7] &7[&cname of block&7] &8x &7Spawn sphere at your location of target's block." to {_s}
			send "" to {_s}
		{_typehelp} = "WallsCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//walls &7[&cname of block&7] &8x &7Set walls of block type." to {_s}
			send "" to {_s}
		{_typehelp} = "FacesCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//faces &7[&cname of block&7] &8x &7Set faces of block type." to {_s}
			send "" to {_s}
		{_typehelp} = "OverlayCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//overlay &7[&cname of block&7] &8x &7Set overlay of block type." to {_s}
			send "" to {_s}
		{_typehelp} = "CylCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//cyl &7[&cradius&7] &7[&cname of block&7] &8x &7Spawn cylinder at your location." to {_s}
			send "" to {_s}
		{_typehelp} = "DownCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//down &7[&cnumber&7] &8x &7Teleport at location down." to {_s}
			send "" to {_s}
		{_typehelp} = "ButcherCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f//butcher &7[&cnumber&7] &8x &7Clear all entitys in player's radius." to {_s}
			send "" to {_s}

function WorldEditCMDToggleeditwand(s: sender):
	load "plugins/WorldEdit/config.yml"
	yaml value "wand.stats" from "config" = false:
		set yaml value "wand.stats" from "config" to true
		yaml value "language" from "config" = "English":
			send "&7You have been enabled to worldedit wand." to {_s}
		save yaml "config"
		unload yaml "config"
		stop
	else:
		set yaml value "wand.stats" from "config" to false
		yaml value "language" from "config" = "English":
			send "&7You have been disabled to worldedit wand." to {_s}
		save yaml "config"
		unload yaml "config"
		stop

function WorldEditCMDWand(s: sender):
	load "plugins/WorldEdit/config.yml"
	yaml value "wand.stats" from "config" = false:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe wand has been disabled for this server." to {_s}
	else:
		yaml value "language" from "config" = "English":
			give yaml value "wand.item-type" from "config" named "&c&l↪ &7Wand of WorldEdit" to {_s}
			send "&7You have gived to wand of WorldEdit." to {_s}

function WorldEditCMDDeselect(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.stats" from "who" = true:
		set yaml value "wand.stats" from "who" to false
		delete yaml value "wand.pos1" from "who"
		delete yaml value "wand.pos2" from "who"
		yaml value "language" from "config" = "English":
			send "&7You have reset your wand of WorldEdit." to {_s}
		save yaml "who"
		unload yaml "who"
		stop
	else:
		send "&4| &8x &cYou have not the selection." to {_s}

function WorldEditCMDUp(s: sender, n: integer):
	y coordinate of location at {_s} + {_n} >= 320:
		send "&4| &8x &cYou have reached the maximum height." to {_s}
	else:
		teleport {_s} to location {_s}'s x-location, y coordinate of location at {_s} + {_n}, {_s}'s z-location in world {_s}'s world
		wait 1 tick
		block under {_s} = air or cave air or water or lava:
			set block under {_s} to glass
		load "plugins/WorldEdit/config.yml"
		yaml value "language" from "config" = "English":
			send "&dYou have up to %{_n}% &dblocks." to {_s}

function WorldEditCMDSize(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			yaml value "language" from "config" = "English":
				send "&dYou have selected &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}

function WorldEditCMDPos(s: sender, positiontype: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	{_positiontype} = "1":
		set yaml value "wand.stats" from "who" to true
		set yaml value "wand.pos1.stats" from "who" to true
		set yaml value "wand.pos1.location" from "who" to location of {_s}
		yaml value "language" from "config" = "English":
			yaml value "wand.pos2.stats" from "who" doesn't exist:
				send "&dYou have created position 1. &d(&dx: &c%x-location of {_s}%&d, y: &c%y-location of {_s}%&d, z: &c%z-location of {_s}%&d)" to {_s}
			else:
				send "&dYou have created position 1. &d(&dx: &c%x-location of {_s}%&d, y: &c%y-location of {_s}%&d, z: &c%z-location of {_s}%&d) (&c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"%&d)" to {_s}
		save yaml "who"
		unload yaml "who"
		stop
	{_positiontype} = "2":
		set yaml value "wand.stats" from "who" to true
		set yaml value "wand.pos2.stats" from "who" to true
		set yaml value "wand.pos2.location" from "who" to location of {_s}
		yaml value "language" from "config" = "English":
			yaml value "wand.pos1.stats" from "who" doesn't exist:
				send "&dYou have created position 2. &d(&dx: &c%x-location of {_s}%&d, y: &c%y-location of {_s}%&d, z: &c%z-location of {_s}%&d)" to {_s}
			else:
				send "&dYou have created position 2. &d(&dx: &c%x-location of {_s}%&d, y: &c%y-location of {_s}%&d, z: &c%z-location of {_s}%&d) (&c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"%&d)" to {_s}
		save yaml "who"
		unload yaml "who"
		stop

function WorldEditCMDHpos(s: sender, positiontype: text):
	targeted block of {_s} isn't set:
		send "&4| &8x &cYou must target a block that is not air." to {_s}
	else:
		load "plugins/WorldEdit/config.yml"
		load "plugins/WorldEdit/players/%{_s}%/who.yml"
		{_positiontype} = "1":
			set yaml value "wand.stats" from "who" to true
			set yaml value "wand.pos1.stats" from "who" to true
			set yaml value "wand.pos1.location" from "who" to location of targeted block of {_s}
			yaml value "language" from "config" = "English":
				yaml value "wand.pos2.stats" from "who" doesn't exist:
					send "&dYou have created position 1. &d(&dx: &c%x-location of targeted block of {_s}%&d, y: &c%y-location of targeted block of {_s}%&d, z: &c%z-location of targeted block of {_s}%&d)" to {_s}
				else:
					send "&dYou have created position 1. &d(&dx: &c%x-location of targeted block of {_s}%&d, y: &c%y-location of targeted block of {_s}%&d, z: &c%z-location of targeted block of {_s}%&d) (&c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"%&d)" to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		{_positiontype} = "2":
			set yaml value "wand.stats" from "who" to true
			set yaml value "wand.pos2.stats" from "who" to true
			set yaml value "wand.pos2.location" from "who" to location of targeted block of {_s}
			yaml value "language" from "config" = "English":
				yaml value "wand.pos1.stats" from "who" doesn't exist:
					send "&dYou have created position 2. &d(&dx: &c%x-location of targeted block of {_s}%&d, y: &c%y-location of targeted block of {_s}%&d, z: &c%z-location of targeted block of {_s}%&d)" to {_s}
				else:
					send "&dYou have created position 2. &d(&dx: &c%x-location of targeted block of {_s}%&d, y: &c%y-location of targeted block of {_s}%&d, z: &c%z-location of targeted block of {_s}%&d) (&c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"%&d)" to {_s}
			save yaml "who"
			unload yaml "who"
			stop

function WorldEditCMDDelchunk(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
	wait 1 tick
	set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within chunk at location of {_s}
	wait 1 tick
	set all blocks within chunk at location of {_s} to air
	yaml value "language" from "config" = "English":
		send "&dYou have remove your chunk." to {_s}
	save yaml "who"
	unload yaml "who"
	stop

function WorldEditCMDHdelchunk(s: sender):
	targeted block of {_s} isn't set:
		send "&4| &8x &cYou must target a block that is not air." to {_s}
	else:
		load "plugins/WorldEdit/config.yml"
		load "plugins/WorldEdit/players/%{_s}%/who.yml"
		set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
		wait 1 tick
		set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within chunk at location of targeted block of {_s}
		wait 1 tick
		set all blocks within chunk at location of targeted block of {_s} to air
		yaml value "language" from "config" = "English":
			send "&dYou have remove your chunk." to {_s}
		save yaml "who"
		unload yaml "who"
		stop

function WorldEditCMDUndo(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "undo.numbers" from "who" <= 0:
		set yaml value "undo.numbers" from "who" to 0
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have no turning back." to {_s}
		save yaml "who"
		unload yaml "who"
	else:
		set yaml value "redo.numbers" from "who" to yaml value "redo.numbers" from "who" + 1 
		wait 1 tick
		set {WorldEdit::%{_s}'s uuid%::redo::saves::%yaml value "redo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
		wait 1 tick
		loop {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*}:
			set block at loop-value to loop-value
		wait 1 tick
		set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" - 1
		yaml value "language" from "config" = "English":
			send "&dYou have gone back." to {_s}
		save yaml "who"
		unload yaml "who"
		stop

function WorldEditCMDRedo(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "redo.numbers" from "who" <= 0:
		set yaml value "redo.numbers" from "who" to 0
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have no turning back." to {_s}
		save yaml "who"
		unload yaml "who"
		stop
	else:
		set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
		wait 1 tick
		set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
		wait 1 tick
		loop {WorldEdit::%{_s}'s uuid%::redo::saves::%yaml value "redo.numbers" from "who"%::*}:
			set block at loop-value to loop-value
		wait 1 tick
		set yaml value "redo.numbers" from "who" to yaml value "redo.numbers" from "who" - 1
		yaml value "language" from "config" = "English":
			send "&dYou have gone back." to {_s}
		save yaml "who"
		unload yaml "who"
		stop

function WorldEditCMDSet(s: sender, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
				stop
		else:
			set {WorldEdit::%{_s}'s uuid%::setblock::*} to {_itemtype} split at ","
			loop {WorldEdit::%{_s}'s uuid%::setblock::*}:
				set {WorldEdit::%{_s}'s uuid%::setblock::%loop-index%} to loop-value parsed as item
				{WorldEdit::%{_s}'s uuid%::setblock::%loop-index%} is not a item:
					send "&4| &8x &cYou must choose a block that exists !" to {_s}
					stop
			wait 1 tick
			set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
			wait 1 tick
			set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				set {WorldEdit::%{_s}'s uuid%::setblock::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::setblock::*}
				set loop-block to {WorldEdit::%{_s}'s uuid%::setblock::randomblock}
			yaml value "language" from "config" = "English":
				send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
			save yaml "who"
			unload yaml "who"
			delete {WorldEdit::%{_s}'s uuid%::setblock::randomblock}
			stop

function WorldEditCMDSetbiome(s: sender, biometype: biome):
	load "plugins/WorldEdit/config.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				set biome at location of loop-block to {_biometype}
			yaml value "language" from "config" = "English":
				send "&dYou have set biome %{_biometype}% &dat location of position 1 and 2." to {_s}

function WorldEditCMDCut(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
			wait 1 tick
			set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				set loop-block to air
			yaml value "language" from "config" = "English":
				send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
			save yaml "who"
			unload yaml "who"
			stop

function WorldEditCMDCount(s: sender, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			{_itemtype} parsed as item is not a item:
				send "&4| &cYou must choose a block that exists !" to {_s}
				stop
			set {_WorldEdit::%{_s}'s uuid%::count} to 0
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				loop-block is {_itemtype} parsed as item:
					add 1 to {_WorldEdit::%{_s}'s uuid%::count}
			send "&dYou have %{_WorldEdit::%{_s}'s uuid%::count}% &d%{_itemtype} parsed as item% !" to {_s}

function WorldEditCMDFix(s: sender, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			{_itemtype} = "WATER":
				set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
				wait 1 tick
				set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
				wait 1 tick
				loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
					loop-block is a air:
						block under the loop-block is not a air:
							set loop-value to water
				yaml value "language" from "config" = "English":
					send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
				save yaml "who"
				unload yaml "who"
				stop
			{_itemtype} = "LAVA":
				set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
				wait 1 tick
				set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
				wait 1 tick
				loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
					loop-block is a air:
						block under the loop-block is not a air:
							set loop-value to lava
				yaml value "language" from "config" = "English":
					send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
				save yaml "who"
				unload yaml "who"
				stop
			{_itemtype} = "FIRE":
				set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
				wait 1 tick
				set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
				wait 1 tick
				loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
					loop-block is a air:
						block under the loop-block is not a air:
							set loop-value to minecraft:fire
				yaml value "language" from "config" = "English":
					send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
				save yaml "who"
				unload yaml "who"
				stop

function WorldEditCMDThaw(s: sender, n: number):
	load "plugins/WorldEdit/config.yml"
	{_n} >= 1:
		loop blocks in radius {_n} around location of block at location of {_s}:
			loop-block is a snow layer or snow:
				set loop-block to air
		yaml value "language" from "config" = "English":
			send "&dYou have delete all snows blocks of %{_n}% &dradius." to {_s}
	{_n} <= 0:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou must put a number above 1." to {_s}

function WorldEditCMDExtinguish(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
			wait 1 tick
			set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				loop-block is a lava or fire:
					set loop-value to air
			yaml value "language" from "config" = "English":
				send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
			save yaml "who"
			unload yaml "who"

function WorldEditCMDReplace(s: sender, itemtype: text, itemtype2: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			set {WorldEdit::%{_s}'s uuid%::replace::*} to {_itemtype} split at ","
			loop {WorldEdit::%{_s}'s uuid%::replace::*}:
				set {WorldEdit::%{_s}'s uuid%::replace::%loop-index%} to loop-value parsed as item
				{WorldEdit::%{_s}'s uuid%::replace::%loop-index%} is not a item:
					send "&4| &8x &cYou must choose a block that exists !" to {_s}
					stop
			set {WorldEdit::%{_s}'s uuid%::replace2::*} to {_itemtype2} split at ","
			loop {WorldEdit::%{_s}'s uuid%::replace2::*}:
				set {WorldEdit::%{_s}'s uuid%::replace2::%loop-index%} to loop-value parsed as item
				{WorldEdit::%{_s}'s uuid%::replace2::%loop-index%} is not a item:
					send "&4| &8x &cYou must choose a block that exists !" to {_s}
					stop
			wait 1 tick
			set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
			wait 1 tick
			set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				loop {WorldEdit::%{_s}'s uuid%::replace::*}:
					loop-block-1 is {WorldEdit::%{_s}'s uuid%::replace::%loop-index%}:
						set {WorldEdit::%{_s}'s uuid%::replace::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::replace2::*}
						set loop-block-1 to {WorldEdit::%{_s}'s uuid%::replace::randomblock}
			yaml value "language" from "config" = "English":
				send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
			save yaml "who"
			unload yaml "who"
			delete {WorldEdit::%{_s}'s uuid%::replace::*}
			delete {WorldEdit::%{_s}'s uuid%::replace2::*}
			stop

function WorldEditCMDSphere(s: sender, n: number, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	set {WorldEdit::%{_s}'s uuid%::sphere::*} to {_itemtype} split at ","
	loop {WorldEdit::%{_s}'s uuid%::sphere::*}:
		set {WorldEdit::%{_s}'s uuid%::sphere::%loop-index%} to loop-value parsed as item
		{WorldEdit::%{_s}'s uuid%::sphere::%loop-index%} is not a item:
			send "&4| &8x &cYou must choose a block that exists !" to {_s}
	wait 1 tick
	loop blocks in radius {_n} around location of block at location of {_s}:
		set {WorldEdit::%{_s}'s uuid%::sphere::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::sphere::*}
		set loop-block to {WorldEdit::%{_s}'s uuid%::sphere::randomblock}
	yaml value "language" from "config" = "English":
		send "&dYou have spawn a sphere at your location." to {_s}
	delete {WorldEdit::%{_s}'s uuid%::sphere::randomblock}

function WorldEditCMDHsphere(s: sender, n: number, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	set {WorldEdit::%{_s}'s uuid%::sphere::*} to {_itemtype} split at ","
	loop {WorldEdit::%{_s}'s uuid%::sphere::*}:
		set {WorldEdit::%{_s}'s uuid%::sphere::%loop-index%} to loop-value parsed as item
		{WorldEdit::%{_s}'s uuid%::sphere::%loop-index%} is not a item:
			send "&4| &8x &cYou must choose a block that exists !" to {_s}
	wait 1 tick
	loop blocks in radius {_n} around location of block at location of targeted block of {_s}:
		set {WorldEdit::%{_s}'s uuid%::sphere::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::sphere::*}
		set loop-block to {WorldEdit::%{_s}'s uuid%::sphere::randomblock}
	yaml value "language" from "config" = "English":
		send "&dYou have spawn a sphere at your location of target's block." to {_s}
	delete {WorldEdit::%{_s}'s uuid%::sphere::randomblock}

function WorldEditCMDSuperpickaxe(s: sender):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "superpickaxe.stats" from "who" = false:
		set yaml value "superpickaxe.stats" from "who" to true
		yaml value "language" from "config" = "English":
			send "&dYou have enabled to the superpickaxe." to {_s}
		save yaml "who"
		unload yaml "who"
	else:
		set yaml value "superpickaxe.stats" from "who" to false
		yaml value "language" from "config" = "English":
			send "&dYou have disabled to the superpickaxe." to {_s}
		save yaml "who"
		unload yaml "who"
	delete {WorldEdit::%{_s}'s uuid%::sphere::randomblock}
	stop

function WorldEditCMDWalls(s: sender, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			set {WorldEdit::%{_s}'s uuid%::walls::*} to {_itemtype} split at ","
			loop {WorldEdit::%{_s}'s uuid%::walls::*}:
				set {WorldEdit::%{_s}'s uuid%::walls::%loop-index%} to loop-value parsed as item
				{WorldEdit::%{_s}'s uuid%::walls::%loop-index%} is not a item:
					send "&4| &8x &cYou must choose a block that exists !" to {_s}
					stop
			wait 1 tick
			set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
			wait 1 tick
			set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				x coordinate of loop-block is x coordinate of yaml value "wand.pos1.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::walls::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::walls::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::walls::randomblock}
				else if z coordinate of loop-block is z coordinate of yaml value "wand.pos1.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::walls::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::walls::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::walls::randomblock}
				else if x coordinate of loop-block is x coordinate of yaml value "wand.pos2.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::walls::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::walls::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::walls::randomblock}
				else if z coordinate of loop-block is z coordinate of yaml value "wand.pos2.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::walls::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::walls::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::walls::randomblock}
			yaml value "language" from "config" = "English":
				send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
			save yaml "who"
			unload yaml "who"
			delete {WorldEdit::%{_s}'s uuid%::walls::*}
			stop

function WorldEditCMDFaces(s: sender, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			set {WorldEdit::%{_s}'s uuid%::faces::*} to {_itemtype} split at ","
			loop {WorldEdit::%{_s}'s uuid%::faces::*}:
				set {WorldEdit::%{_s}'s uuid%::faces::%loop-index%} to loop-value parsed as item
				{WorldEdit::%{_s}'s uuid%::faces::%loop-index%} is not a item:
					send "&4| &8x &cYou must choose a block that exists !" to {_s}
					stop
			wait 1 tick
			set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
			wait 1 tick
			set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				x coordinate of loop-block is x coordinate of yaml value "wand.pos1.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::faces::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::faces::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::faces::randomblock}
				else if z coordinate of loop-block is z coordinate of yaml value "wand.pos1.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::faces::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::faces::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::faces::randomblock}
				else if x coordinate of loop-block is x coordinate of yaml value "wand.pos2.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::faces::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::faces::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::faces::randomblock}
				else if z coordinate of loop-block is z coordinate of yaml value "wand.pos2.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::faces::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::faces::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::faces::randomblock}
				else if y coordinate of loop-block is y coordinate of yaml value "wand.pos2.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::faces::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::faces::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::faces::randomblock}
				else if y coordinate of loop-block is y coordinate of yaml value "wand.pos1.location" from "who":
					set {WorldEdit::%{_s}'s uuid%::faces::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::faces::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::faces::randomblock}
			yaml value "language" from "config" = "English":
				send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
			save yaml "who"
			unload yaml "who"
			delete {WorldEdit::%{_s}'s uuid%::faces::*}
			stop

function WorldEditCMDOverlay(s: sender, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	yaml value "wand.pos1.stats" from "who" doesn't exist:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not selection complete." to {_s}
	else:
		yaml value "wand.pos2.stats" from "who" doesn't exist:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou have not selection complete." to {_s}
		else:
			set {WorldEdit::%{_s}'s uuid%::overlay::*} to {_itemtype} split at ","
			loop {WorldEdit::%{_s}'s uuid%::overlay::*}:
				set {WorldEdit::%{_s}'s uuid%::overlay::%loop-index%} to loop-value parsed as item
				{WorldEdit::%{_s}'s uuid%::overlay::%loop-index%} is not a item:
					send "&4| &8x &cYou must choose a block that exists !" to {_s}
					stop
			wait 1 tick
			set yaml value "undo.numbers" from "who" to yaml value "undo.numbers" from "who" + 1 
			wait 1 tick
			set {WorldEdit::%{_s}'s uuid%::undo::saves::%yaml value "undo.numbers" from "who"%::*} to block saves of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"
			wait 1 tick
			loop blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who":
				loop-block = air or cave air:
					block under the loop-block != air or cave air:
						set {WorldEdit::%{_s}'s uuid%::overlay::randomblock} to random element out of {WorldEdit::%{_s}'s uuid%::overlay::*}
						set loop-block to {WorldEdit::%{_s}'s uuid%::overlay::randomblock}
			yaml value "language" from "config" = "English":
				send "&dYou have set &c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"% &dblocks." to {_s}
			save yaml "who"
			unload yaml "who"
			delete {WorldEdit::%{_s}'s uuid%::overlay::*}
			stop

function WorldEditCMDCyl(s: sender, n: number, itemtype: text):
	load "plugins/WorldEdit/config.yml"
	load "plugins/WorldEdit/players/%{_s}%/who.yml"
	set {WorldEdit::%{_s}'s uuid%::cyl::*} to {_itemtype} split at ","
	loop {WorldEdit::%{_s}'s uuid%::cyl::*}:
		set {WorldEdit::%{_s}'s uuid%::cyl::%loop-index%} to loop-value parsed as item
		{WorldEdit::%{_s}'s uuid%::cyl::%loop-index%} is not a item:
			send "&4| &8x &cYou must choose a block that exists !" to {_s}
		wait 1 tick
		loop blocks in radius {_n} + 1 around block at {_s}:
			round(distance between loop-block and block at {_s}) is less than or equal to {_n}:
				y-coordinate of loop-block is y-coordinate of block at {_s}:
					set {WorldEdit::%{_s}'s uuid%::cyl::randomblock} to random element out of  {WorldEdit::%{_s}'s uuid%::cyl::*}
					set loop-block to {WorldEdit::%{_s}'s uuid%::cyl::randomblock}
		yaml value "language" from "config" = "English":
			send "&dYou have spawn a cylinder at your location." to {_s}
		delete {WorldEdit::%{_s}'s uuid%::cyl::*}

function WorldEditCMDButcher(s: sender, n: number):
	load "plugins/WorldEdit/config.yml"
	loop all entities in radius {_n} of {_s}:
		loop-value != player:
			kill loop-value
	yaml value "language" from "config" = "English":
		send "&dYou have cleared all entitys at your location radius." to {_s}

on break:
	load "plugins/WorldEdit/players/%player%/who.yml"
	yaml value "superpickaxe.stats" from "who" = true:
		gamemode of player = survival or adventure:
			tool of player = wooden pickaxe or stone pickaxe or iron pickaxe or golden pickaxe or diamond pickaxe or netherite pickaxe:
				clear drops
				set event-block to air
				drop event-block at location of event-block
				stop

on right click:
	player has permission "worldedit.wand.rightclick" or "worldedit.wand.*" or "worldedit.*":
		name of item = "&c&l↪ &7Wand of WorldEdit":
			cancel event
			load "plugins/WorldEdit/config.yml"
			yaml value "wand.stats" from "config" = false:
				yaml value "language" from "config" = "English":
					send "&4| &8x &cThe wand has been disabled for this server." to {_s}
			else:
				clicked block is set:
					load "plugins/WorldEdit/players/%player%/who.yml"
					set yaml value "wand.stats" from "who" to true
					set yaml value "wand.pos2.stats" from "who" to true
					set yaml value "wand.pos2.location" from "who" to location of clicked block
					yaml value "language" from "config" = "English":
						yaml value "wand.pos1.stats" from "who" doesn't exist:
							send "&dYou have created position 2. &d(&dx: &c%x-location of clicked block%&d, y: &c%y-location of clicked block%&d, z: &c%z-location of clicked block%&d)" to player
						else:
							send "&dYou have created position 2. &d(&dx: &c%x-location of clicked block%&d, y: &c%y-location of clicked block%&d, z: &c%z-location of clicked block%&d) (&c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"%&d)" to player
					save yaml "who"
					unload yaml "who"
					stop

on left click:
	player has permission "worldedit.wand.leftclick" or "worldedit.wand.*" or "worldedit.*":
		name of item = "&c&l↪ &7Wand of WorldEdit":
			cancel event
			load "plugins/WorldEdit/config.yml"
			yaml value "wand.stats" from "config" = false:
				yaml value "language" from "config" = "English":
					send "&4| &8x &cThe wand has been disabled for this server." to {_s}
			else:
				clicked block is set:
					load "plugins/WorldEdit/players/%player%/who.yml"
					set yaml value "wand.stats" from "who" to true
					set yaml value "wand.pos1.stats" from "who" to true
					set yaml value "wand.pos1.location" from "who" to location of clicked block
					yaml value "language" from "config" = "English":
						yaml value "wand.pos2.stats" from "who" doesn't exist:
							send "&dYou have created position 1. &d(&dx: &c%x-location of clicked block%&d, y: &c%y-location of clicked block%&d, z: &c%z-location of clicked block%&d)" to player
						else:
							send "&dYou have created position 1. &d(&dx: &c%x-location of clicked block%&d, y: &c%y-location of clicked block%&d, z: &c%z-location of clicked block%&d) (&c%amount of blocks within yaml value "wand.pos1.location" from "who" and yaml value "wand.pos2.location" from "who"%&d)" to player
					save yaml "who"
					unload yaml "who"
					stop

function WorldEditCMDDown(s: sender, n: integer):
	y coordinate of location at {_s} - {_n} <= -64:
		send "&4| &8x &cYou have reached the minimum height." to {_s}
	else:
		teleport {_s} to location {_s}'s x-location, y coordinate of location at {_s} - {_n}, {_s}'s z-location in world {_s}'s world
		wait 1 tick
		block under {_s} = air or cave air or water or lava:
			set block under {_s} to glass
		load "plugins/WorldEdit/config.yml"
		yaml value "language" from "config" = "English":
			send "&dYou have down to %{_n}% &dblocks." to {_s}

on right click on iron door:
	player has permission "worldedit.irondoor.open" or "worldedit.*":
		toggle event-block

on right click on iron trapdoor:
	player has permission "worldedit.irontrapdoor.open" or "worldedit.*":
		toggle event-block

command /worldedit [<text>] [<text>]:
	aliases: /we, worldedit:worldedit, worldedit:we
	description: &fworldedit command /worldedit.
	trigger:
		arg 1 isn't set:
			WorldEditHelp(sender, "WorldEditCMD")
		else:
			arg 1 != "info" or "reload":
				WorldEditHelp(sender, "WorldEditCMD")
			arg 1 = "info":
				load "plugins/WorldEdit/config.yml"
				yaml value "language" from "config" = "English":
					send "" to sender
					send "&8| &8x &6Help:" to sender
					send "" to sender
					send "&8| &fName of skript: &cWorldEdit (Skript)" to sender
					send "&8| &fAuthor of skript: &calexisl315 (Alias: Lennord)" to sender
					send "&8| &fDescription of skript: &cThis skript allows you to redo all or almost all the functionality of the WorldEdit and FastAsyncWorldEdit plugin." to sender
					send "&8| &fVersion of skript: &c2.0.6" to sender
					send "&8| &fPlugin requirements: &cSkript&7, &cSkript-YAML &7and &cSkellett" to sender
					send "&8| &fAll languages of skript: &cEnglish" to sender
					send "" to sender
			arg 1 = "reload":
				make console execute command "/sk reload WorldEdit"
				load "plugins/WorldEdit/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have been reloaded this skript." to sender

on command "/worldedit" or "/worldedit:worldedit" or "/we" or "/worldedit:we":
	sender = player:
		player doesn't have permission "worldedit.worldedit" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //toggleeditwand [<text>]:
	aliases: worldedit:/toggleeditwand
	description: &fworldedit command /toggleeditwand.
	trigger:
		sender = player:
			WorldEditCMDToggleeditwand(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//toggleeditwand" or "/worldedit:/toggleeditwand":
	sender = player:
		player doesn't have permission "worldedit.toggleeditwand" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //wand [<text>]:
	executable by: player and console
	aliases: worldedit:/wand
	description: &fWorldEdit command //wand.
	trigger:
		sender = player:
			WorldEditCMDWand(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//wand" or "/worldedit:/wand":
	sender = player:
		player doesn't have permission "worldedit.toggleeditwand" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //deselect [<text>]:
	aliases: worldedit:/deselect, //desel, worldedit:/desel, //deselection, worldedit:/deselection
	description: &fWorldedit command //deselect.
	trigger:
		sender = player:
			WorldEditCMDDeselect(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//deselect" or "/worldedit:/deselect" or "//desel" or "/worldedit:/desel"  or "//deselection" or "/worldedit:/deselection":
	sender = player:
		player doesn't have permission "worldedit.deselect" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //up [<integer>] [<text>]:
	aliases: worldedit:/up
	description: &fWorldedit command //up.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "UpCMD")
			else:
				WorldEditCMDUp(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//up" or "/worldedit:/up":
	sender = player:
		player doesn't have permission "worldedit.up" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //size [<text>]:
	aliases: worldedit:/size
	description: &fWorldedit command //size.
	trigger:
		sender = player:
			WorldEditCMDSize(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//size" or "/worldedit:/size":
	sender = player:
		player doesn't have permission "worldedit.size" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //pos [<text>] [<text>]:
	aliases: worldedit:/pos, //position, worldedit:/position
	description: &fWorldedit command //pos.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "PosCMD")
			else:
				arg 1 != "1" or "2":
					WorldEditHelp(player, "PosCMD")
				arg 1 = "1":
					WorldEditCMDPos(player, "1")
				arg 1 = "2":
					WorldEditCMDPos(player, "2")
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//pos" or "/worldedit:/pos" or "//position" or "/worldedit:/position":
	sender = player:
		player doesn't have permission "worldedit.position" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //hpos [<text>] [<text>]:
	aliases: worldedit:/hpos, //hposition, worldedit:/hposition
	description: &fWorldedit command //hpos.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "HposCMD")
			else:
				arg 1 != "1" or "2":
					WorldEditHelp(player, "HposCMD")
				arg 1 = "1":
					WorldEditCMDHpos(player, "1")
				arg 1 = "2":
					WorldEditCMDHpos(player, "2")
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//hpos" or "/worldedit:/hpos" or "//hposition" or "/worldedit:/hposition":
	sender = player:
		player doesn't have permission "worldedit.hposition" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //delchunk [<text>]:
	aliases: worldedit:/delchunk, //deletechunk, worldedit:/deletechunk
	description: &fWorldedit command //delchunk.
	trigger:
		sender = player:
			WorldEditCMDDelchunk(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//delchunk" or "/worldedit:/delchunk" or "//deletechunk" or "/worldedit:/deletechunk":
	sender = player:
		player doesn't have permission "worldedit.delchunk" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //hdelchunk [<text>]:
	aliases: worldedit:/hdelchunk, //hdeletechunk, worldedit:/hdeletechunk
	description: &fWorldedit command //hdelchunk.
	trigger:
		sender = player:
			WorldEditCMDHdelchunk(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//hdelchunk" or "/worldedit:/hdelchunk" or "//hdeletechunk" or "/worldedit:/hdeletechunk":
	sender = player:
		player doesn't have permission "worldedit.hdelchunk" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //undo [<text>]:
	aliases: worldedit:/undo
	description: &fWorldedit command //undo.
	trigger:
		sender = player:
			WorldEditCMDUndo(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//undo" or "/worldedit:/undo":
	sender = player:
		player doesn't have permission "worldedit.undo" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //redo [<text>]:
	aliases: worldedit:/redo
	description: &fWorldedit command //redo.
	trigger:
		sender = player:
			WorldEditCMDRedo(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//redo" or "/worldedit:/redo":
	sender = player:
		player doesn't have permission "worldedit.redo" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //set [<text>]:
	aliases: worldedit:/set
	description: &fWorldedit command //set.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "SetCMD")
			else:
				WorldEditCMDSet(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//set" or "/worldedit:/set":
	sender = player:
		player doesn't have permission "worldedit.set" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //setbiome [<biome>] [<text>]:
	aliases: worldedit:/setbiome
	description: &fWorldedit command //setbiome.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "SetbiomeCMD")
			else:
				WorldEditCMDSetbiome(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//setbiome" or "/worldedit:/setbiome":
	sender = player:
		player doesn't have permission "worldedit.setbiome" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //cut [<text>]:
	aliases: worldedit:/cut
	description: &fWorldedit command //cut.
	trigger:
		sender = player:
			WorldEditCMDCut(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//cut" or "/worldedit:/cut":
	sender = player:
		player doesn't have permission "worldedit.cut" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //count [<text>] [<text>]:
	aliases: worldedit:/count
	description: &fWorldedit command //count.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "CountCMD")
			else:
				WorldEditCMDCount(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//count" or "/worldedit:/count":
	sender = player:
		player doesn't have permission "worldedit.count" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //fixwater [<text>]:
	aliases: worldedit:/fixwater
	description: &fWorldedit command //fixwater.
	trigger:
		sender = player:
			WorldEditCMDFix(player, "WATER")
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//fixwater" or "/worldedit:/fixwater":
	sender = player:
		player doesn't have permission "worldedit.fixwater" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //fixlava [<text>]:
	aliases: worldedit:/fixlava
	description: &fWorldedit command //fixlava.
	trigger:
		sender = player:
			WorldEditCMDFix(player, "LAVA")
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//fixlava" or "/worldedit:/fixlava":
	sender = player:
		player doesn't have permission "worldedit.fixlava" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //fixfire [<text>]:
	aliases: worldedit:/fixfire
	description: &fWorldedit command //fixfire.
	trigger:
		sender = player:
			WorldEditCMDFix(player, "FIRE")
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//fixfire" or "/worldedit:/fixfire":
	sender = player:
		player doesn't have permission "worldedit.fixfire" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //thaw [<number>] [<text>]:
	aliases: worldedit:/thaw
	description: &fWorldedit command //thaw.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "ThawCMD")
			else:
				WorldEditCMDThaw(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//thaw" or "/worldedit:/thaw":
	sender = player:
		player doesn't have permission "worldedit.thaw" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //extinguish [<text>]:
	aliases: worldedit:/extinguish, //ext, worldedit:/ext
	description: &fWorldedit command //extinguish.
	trigger:
		sender = player:
			WorldEditCMDExtinguish(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//extinguish" or "/worldedit:/extinguish" or "//ext" or "/worldedit:/ext":
	sender = player:
		player doesn't have permission "worldedit.extinguish" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //tree [<text>] [<text>]:
	aliases: worldedit:/tree
	description: &fWorldedit command //extinguish.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(sender, "TreeCMD")
			else:
				load "plugins/WorldEdit/config.yml"
				target block != grass or dirt or coarse_dirt:
					yaml value "language" from "config" = "English":
						send "&4| &8x &cYou cannot spawn a tree on this block." to player
				else:
					arg 1 != "oak" or "jungle" or "spruce" or "acacia" or "birch" or "darkoak":
						yaml value "language" from "config" = "English":
							send "&6List of all trees: &cOak &8x &cJungle &8x &cSpruce &8x &cAcacia &8x &cBirch &8x &cDarkoak" to player
					arg 1 = "oak":
						grow oak tree above the targeted block
						yaml value "language" from "config" = "English":
							send "&dYou have spawned a new tree." to player
					arg 1 = "jungle":
						grow jungle tree above the targeted block
						yaml value "language" from "config" = "English":
							send "&dYou have spawned a new tree." to player
					arg 1 = "spruce":
						grow spruce tree above the targeted block
						yaml value "language" from "config" = "English":
							send "&dYou have spawned a new tree." to player
					arg 1 = "acacia":
						grow acacia tree above the targeted block
						yaml value "language" from "config" = "English":
							send "&dYou have spawned a new tree." to player
					arg 1 = "birch":
						grow birch tree above the targeted block
						yaml value "language" from "config" = "English":
							send "&dYou have spawned a new tree." to player
					arg 1 = "darkoak":
						grow dark oak tree above the targeted block
						yaml value "language" from "config" = "English":
							send "&dYou have spawned a new tree." to player
		sender = console:
			WorldEditNoCommandConsole(console)

command //replace [<text>] [<text>]:
	aliases: worldedit:/replace
	description: &fWorldedit command //replace.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "ReplaceCMD")
			else:
				arg 2 isn't set:
					WorldEditHelp(player, "ReplaceCMD")
				else:
					WorldEditCMDReplace(player, arg 1, arg 2)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//replace" or "/worldedit:/replace":
	sender = player:
		player doesn't have permission "worldedit.replace" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //sphere [<integer>] [<text>]:
	aliases: worldedit:/sphere
	description: &fWorldedit command //sphere.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "SphereCMD")
			else:
				arg 2 isn't set:
					WorldEditHelp(player, "SphereCMD")
				else:
					WorldEditCMDSphere(player, arg 1, arg 2)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//sphere" or "/worldedit:/sphere":
	sender = player:
		player doesn't have permission "worldedit.sphere" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //hsphere [<integer>] [<text>]:
	aliases: worldedit:/hsphere
	description: &fWorldedit command //hsphere.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "HsphereCMD")
			else:
				arg 2 isn't set:
					WorldEditHelp(player, "HsphereCMD")
				else:
					WorldEditCMDHsphere(player, arg 1, arg 2)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//hsphere" or "/worldedit:/hsphere":
	sender = player:
		player doesn't have permission "worldedit.hsphere" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //superpickaxe [<text>]:
	aliases: worldedit:/superpickaxe
	description: &fWorldedit command //superpickaxe.
	trigger:
		sender = player:
			WorldEditCMDSuperpickaxe(player)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//superpickaxe" or "/worldedit:/superpickaxe":
	sender = player:
		player doesn't have permission "worldedit.superpickaxe" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //walls [<text>]:
	aliases: worldedit:/walls
	description: &fWorldedit command //walls.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "WallsCMD")
			else:
				WorldEditCMDWalls(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//walls" or "/worldedit:/walls":
	sender = player:
		player doesn't have permission "worldedit.walls" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //faces [<text>]:
	aliases: worldedit:/faces
	description: &fWorldedit command //faces.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "FacesCMD")
			else:
				WorldEditCMDFaces(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//faces" or "/worldedit:/faces":
	sender = player:
		player doesn't have permission "worldedit.faces" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //overlay [<text>]:
	aliases: worldedit:/overlay
	description: &fWorldedit command //overlay.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "OverlayCMD")
			else:
				WorldEditCMDOverlay(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//overlay" or "/worldedit:/overlay":
	sender = player:
		player doesn't have permission "worldedit.overlay" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //cyl [<integer>] [<text>]:
	aliases: worldedit:/cyl, //cylinder, worldedit:/cylinder
	description: &fWorldedit command //cyl.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "CylCMD")
			else:
				arg 2 isn't set:
					WorldEditHelp(player, "CylCMD")
				else:
					WorldEditCMDCyl(player, arg 1, arg 2)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//cyl" or "/worldedit:/cyl" or "//cylinder" or "/worldedit:/cycylinder":
	sender = player:
		player doesn't have permission "worldedit.cyl" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //down [<integer>] [<text>]:
	aliases: worldedit:/down
	description: &fWorldedit command //down.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "DownCMD")
			else:
				WorldEditCMDDown(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//down" or "/worldedit:/down":
	sender = player:
		player doesn't have permission "worldedit.down" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)

command //butcher [<integer>] [<text>]:
	aliases: worldedit:/butcher
	description: &fWorldedit command //butcher.
	trigger:
		sender = player:
			arg 1 isn't set:
				WorldEditHelp(player, "ButcherCMD")
			else:
				WorldEditCMDButcher(player, arg 1)
		sender = console:
			WorldEditNoCommandConsole(console)

on command "//butcher" or "/worldedit:/butcher":
	sender = player:
		player doesn't have permission "worldedit.butcher" or "worldedit.*":
			cancel event
			WorldEditNoPermission(player)